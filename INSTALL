Installing Icinga 2
===================

Please note that the current version of Icinga 2 isn't much more than a tech
demo. Expect some rough edges when installing and running Icinga 2.

For the "finished" version we're planning to release packages for the most
common Linux distributions as well as for Windows - or at least co-operate
with the package maintainers.

Please check the documentation in the doc/ directory for a current list
of available packages.

Build Requirements
------------------

The following requirements need to be fulfilled in order to build the
application using a dist tarball (package names for RHEL and Debian in
parentheses):

* cmake
* GNU make (make)
* C++ compiler (gcc-c++ on RHEL, build-essential on Debian)
* OpenSSL library and header files (openssl-devel on RHEL, libssl-dev
                                    on Debian)
* Boost library and header files (boost-devel on RHEL, libboost-all-dev
                                  on Debian)
* GNU bison (bison)
* GNU flex (flex) >= 2.5.35
* optional: Doxygen (doxygen)
* optional: MySQL (mysql-devel on RHEL, libmysqlclient-dev on Debian)
* optional: Python (python-devel on RHEL, python-dev on Debian)

Note: RHEL5 ships an ancient flex version. Updated packages are available for
example from the repoforge buildtools repository.

http://mirror.hs-esslingen.de/repoforge/redhat/el5/en/{i386,x86_64}/buildtools/


User Requirements
-----------------

By default Icinga will run as user 'icinga' and group 'icinga'. Additionally the
external command pipe and livestatus features require a dedicated command group
'icingacmd'. You can choose your own user/group names and pass them to the
configure script using the --with-icinga-user, --with-icinga-group,
--with-icingacmd-user and --with-icingacmd-group options.

# groupadd icinga
# groupadd icingacmd
# useradd -c "icinga" -s /sbin/nologin -G icingacmd -g icinga

Add the web server user to the icingacmd group in order to grant it write
permissions to the external command pipe and livestatus socket:

# usermod -a -G icingacmd www-data

Make sure to replace "www-data" with the name of the user your web server
is running as.

Building Icinga 2
-----------------

Once you have installed all the necessary build requirements you can build
Icinga 2 using the following commands:

$ mkdir build && cd build
$ cmake ..
$ make
$ make install

You can specify an alternative installation prefix using -DCMAKE_INSTALL_PREFIX:

$ cmake .. -DCMAKE_INSTALL_PREFIX=/tmp/icinga2

In addition to CMAKE_INSTALL_PREFIX the following Icinga-specific cmake
variables are supported:

- ICINGA2_USER: The user Icinga 2 should run as; defaults to "icinga"
- ICINGA2_GROUP: The group Icinga 2 should run as; defaults to "icinga"
- ICINGA2_COMMAND_USER: The command user Icinga 2 should use; defaults to "icinga"
- ICINGA2_COMMAND_GROUP: The command group Icinga 2 should use; default to "icingacmd"
- CMAKE_INSTALL_SYSCONFDIR: The configuration directory; defaults to CMAKE_INSTALL_PREFIX/etc
- CMAKE_INSTALL_LOCALSTATEDIR: The state directory; defaults to CMAKE_INSTALL_PREFIX/var

Running Icinga 2
----------------

Icinga 2 comes with a single binary that takes care of loading all the relevant
components (e.g. for check execution, notifications, etc.):

# /usr/bin/icinga2
[2013-10-22 13:06:22 +0200] <Main Thread> information/icinga-app: Icinga application loader (version: 0.0.3, git branch master, commit 07d9a59f + changes)
[2013-10-22 13:06:22 +0200] <Main Thread> information/base: Adding library search dir: /usr/lib/icinga2
[2013-10-22 13:06:22 +0200] <Main Thread> information/base: Loading library 'libicinga.la'
[2013-10-22 13:06:22 +0200] <Main Thread> information/config: Adding include search dir: /usr/share/icinga2
[2013-10-22 13:06:22 +0200] <Main Thread> critical/icinga-app: You need to specify at least one config file (using the --config option).

Icinga 2 can be started as daemon using the provided init script:

# /etc/init.d/icinga2
Usage: /etc/init.d/icinga2 {start|stop|restart|reload|checkconfig|status}

Icinga 2 reads a single configuration file which is used to specify all
configuration settings (global settings, hosts, services, etc.). The
configuration format is explained in detail in the doc/ directory.

By default "make install" installs example configuration files in
/usr/local/etc/icinga2 unless you have specified a different prefix or
sysconfdir.
